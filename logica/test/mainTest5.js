// ........................................................
// mainTest2.js
// ........................................................
const Logica = require( "../Logica.js" )
var assert = require ('assert')
// ........................................................
// Hugo Martin Escrihuela
// ........................................................
// ........................................................
// main ()
// ........................................................
describe( "Tarea 5: Funciones basicas de Dispositivo", function() {
    // ....................................................
    // ....................................................
    var laLogica = null
    // ....................................................
    // ....................................................
    it("conectar a la base de datos", function (hecho) {
        laLogica = new Logica(
            "../bd/datos.bd",
            function (err) {
                if (err) {
                    throw new Error("No he podido conectar con datos.db")
                }
                hecho()
            })
    }) // it
    // ....................................................
    // ....................................................
    it("Primero vacio la bd", async function () {
        await laLogica.borrarTodasLasTablas()
    }) // it
    // ....................................................
    // ....................................................
    it("Primero borro dispositivos que pueda haber en la bbdd", async function () {
        await laLogica.borrarDispositivos()
            var res = await laLogica.getTodosLosDispositivos()
            assert.equal( res.length, 0, "¿hay un resulado?" )
    }) // it
    // ....................................................
    // ....................................................
    it("Inserto una persona para que funcione el dispositivo", async function () {
        var persona = { dni: '12345678A', nombre: 'Juan', apellidos: 'Mata', correo: 'juanmata@gmail.com', telefono: '666666666' }
        await laLogica.insertarPersona(persona)
    }) // it
    // ....................................................
    // ....................................................
    it("Inserto el dispositivo", async function () {
        var dispositivo = { dispositivo_id: 'FFFFFFFFFF', dni_empleado: '12345678A' }
        await laLogica.insertarDispositivo(dispositivo)
    }) // it
    // ....................................................
    // ....................................................
    it("Inserto una persona para que funcione el dispositivo actualizado", async function () {
        var persona = { dni: '12345678B', nombre: 'JuanDE', apellidos: 'MataDE', correo: 'juanmata@gmail.com', telefono: '666666666' }
        await laLogica.insertarPersona(persona)
    }) // it
    // ....................................................
    // ....................................................
    it("Actualizo el dispositivo", async function () {
        var dispositivo = { dispositivo_id: 'FFFFFFFFFF', dni_empleado: '12345678B' }
        await laLogica.actualizarDispositivo(dispositivo)
    }) // it
    // ....................................................
    // ....................................................
    it("Busco el dispositivo anteriormente introducido",
        async function () {
            var res = await laLogica.getDispositivoPorPersona('12345678B')
                assert.equal( res.length, 1, "¿no hay un resulado?" )
                assert.equal( res[0].dni_empleado, '12345678B', "¿no es 12345678B?" )
    }) // it
    // ....................................................
    // ....................................................
    it("Busco todos los dispositivos",
        async function () {
            var res = await laLogica.getTodosLosDispositivos()
                assert.equal( res.length, 1, "¿no hay un resulado?" )
                assert.equal( res[0].dni_empleado, '12345678B', "¿no es 12345678B?" )
        }) // it
    // ....................................................
    // ....................................................
    it("Borro dispositivo por id",
        async function () {
            await laLogica.borrarDispositivoPorId('FFFFFFFFFF')
    }) // it
    // ....................................................
    // ....................................................
    it("Compruebo que el dispositivo se ha borrado",
        async function () {
            var res = await laLogica.getDispositivoPorPersona('12345678B')
                assert.equal( res.length, 0, "¿hay un resulado?" )
    }) // it
    // ....................................................
    // ....................................................
    it("Inserto el dispositivo otra vez para borrar de otra forma", async function () {
        var dispositivo = { dispositivo_id: 'FFFFFFFFFF', dni_empleado: '12345678A' }
        await laLogica.insertarDispositivo(dispositivo)
    }) // it
    // ....................................................
    // ....................................................
    it("Borro dispositivo por persona",
        async function () {
            await laLogica.borrarDispositivoPorPersona('12345678A')
    }) // it
    // ....................................................
    // ....................................................
    it("Compruebo que el dispositivo se ha borrado de la otra forma",
        async function () {
            var res = await laLogica.getDispositivoPorPersona('12345678A')
                assert.equal( res.length, 0, "¿hay un resulado?" )
    }) // it
    // ....................................................
    // ....................................................
    it( "cerrar conexión a la base de datos",
        async function() {
            try {
                await laLogica.cerrar()
            } catch( err ) {
            // assert.equal( 0, 1, "cerrar conexión a BD fallada: " + err)
                throw new Error( "cerrar conexión a BD fallada: " + err)
            }
    }) // it
})